[
  {
    "description": "Doesn't call a function if its description doesn't match the prompt",
    "categories": [
      "basic",
      "semantic",
      "negative"
    ],
    "prompt": "Get the current time at Tokyo",
    "available_functions": [
      {
        "name": "get_current_weather",
        "description": "Get the current weather for a given location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. San Francisco, CA"
            }
          }
        }
      }
    ],
    "expected_function_calls": [],
    "final_answer_should": "The answer should indicate that the it's not possible to get the current time at Tokyo with the available resources"
  },
  {
    "description": "Doesn't call a function with a given argument if its type doesn't match the function's parameter",
    "categories": [
      "basic",
      "semantic",
      "negative"
    ],
    "prompt": "Determine if 'foo' is a lucky number",
    "available_functions": [
      {
        "name": "is_lucky",
        "description": "Determines if a given number is lucky. Returns true if it is and false otherwise",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number",
              "description": "The number to check for luck"
            }
          }
        },
        "required": [
          "number"
        ]
      }
    ],
    "expected_function_calls": [],
    "final_answer_should": "The answer should indicate that the operation cannot be completed because the given argument's type is incompatible with the target parameter type"
  },
  {
    "description": "Only calls available functions when some are not available",
    "categories": [
      "basic",
      "semantic",
      "negative"
    ],
    "prompt": "Get the current weather for Buford, GA then get the current time there.",
    "available_functions": [
      {
        "name": "get_current_weather",
        "description": "Get the current weather for a given location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state to get the current weather for, e.g. San Francisco, CA"
            }
          }
        }
      }
    ],
    "expected_function_calls": [
      {
        "name": "get_current_weather",
        "arguments": {
          "location": "Buford, GA"
        },
        "result": "Sunny, 74 degrees",
        "optional": true
      }
    ],
    "final_answer_should": "The answer should indicate that the current weather in Buford is Sunny and 74 degrees but should not indicate a specific value for the current time"
  },
  {
    "description": "Doesn't call a function with a given argument of the wrong type after making a successful call to another function",
    "categories": [
      "sequenced",
      "semantic",
      "negative"
    ],
    "prompt": "Get the current weather in Cape Coral, FL and wait for the result, then determine if 'foo' is a lucky number",
    "available_functions": [
      {
        "name": "get_current_weather",
        "description": "Get the current weather in a given location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. San Francisco, CA"
            }
          }
        }
      },
      {
        "name": "is_lucky",
        "description": "Determines if a given number is lucky. Returns true if it is and false otherwise",
        "parameters": {
          "type": "object",
          "properties": {
            "number": {
              "type": "number",
              "description": "The number to check for luck"
            }
          },
          "required": [
            "number"
          ]
        }
      }
    ],
    "expected_function_calls": [
      {
        "name": "get_current_weather",
        "arguments": {
          "location": "Cape Coral, FL"
        },
        "result": "Sunny, 80 degrees",
        "optional": true
      }
    ],
    "final_answer_should": "The answer should indicate that some portion of the requested operation can't be completed and may additionally indicate an issue about checking a lucky number"
  },
  {
    "description": "Doesn't call a function with an argument of the wrong type derived from the output of another function",
    "categories": [
      "chained",
      "semantic",
      "negative"
    ],
    "prompt": "Get the current weather conditions for Phoenix, AZ, then determine if those weather conditions are hot or cold",
    "available_functions": [
      {
        "name": "get_current_weather",
        "description": "Gets the current weather conditions for a given location",
        "parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "The city and state, e.g. San Francisco, CA"
            }
          },
          "required": [
            "location"
          ]
        }
      },
      {
        "name": "hot_or_cold",
        "description": "Determines if the given weather conditions are hot or cold. Returns \"hot\" or \"cold\"",
        "parameters": {
          "type": "object",
          "properties": {
            "weather_conditions": {
              "type": "integer",
              "description": "Weather conditions from get_current_weather to assess"
            }
          },
          "required": [
            "weather_conditions"
          ]
        }
      }
    ],
    "expected_function_calls": [
      {
        "name": "get_current_weather",
        "arguments": {
          "location": "Phoenix, AZ"
        },
        "result": "temperate",
        "optional": true
      }
    ],
    "final_answer_should": "The answer should indicate that the operation can't be completed with the given information and may also request more information to continue"
  }
]