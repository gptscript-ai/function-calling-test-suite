---
categories:
  - basic
  - semantic
  - negative
description: >-
  Asserts that the model can determine when the capabilities of the available
  functions are not sufficient to answer a prompt and conveys the problem to the
  user
prompt: Get the current time at Tokyo
available_functions:
  - name: get_current_weather
    description: Get the current weather for a given location
    parameters:
      type: object
      properties:
        location:
          type: string
          description: The city and state, e.g. San Francisco, CA
expected_function_calls: []
final_answer_should: >-
  The answer should indicate that the it's not possible to get the current time
  at Tokyo with the available resources
---
categories:
  - basic
  - semantic
  - negative
description: >-
  Asserts that the model can determine when a prompt provides an invalid argument
  for a function and conveys the problem to the user
prompt: Determine if 'foo' is a lucky number
available_functions:
  - name: is_lucky
    description: Determines if a given number is lucky. Returns true if it is and false otherwise
    parameters:
      type: object
      properties:
        number:
          type: number
          description: The number to check for luck
    required:
      - number
expected_function_calls: []
final_answer_should: >-
  The answer should indicate that the operation cannot be completed because the
  given argument's type is incompatible with the target parameter type
---
categories:
  - basic
  - semantic
  - negative
description: >-
  Asserts that the model can determine when the available functions are
  insufficient to answer a prompt and conveys the problem to the user
prompt: Get the current weather for Buford, GA then get the current time there.
available_functions:
  - name: get_current_weather
    description: Get the current weather for a given location
    parameters:
      type: object
      properties:
        location:
          type: string
          description: The city and state to get the current weather for, e.g. San Francisco, CA
expected_function_calls:
  - name: get_current_weather
    arguments:
      location: Buford, GA
    result: Sunny, 74 degrees
    optional: true
final_answer_should: >-
  The answer should indicate that the current weather in Buford is Sunny and 74
  degrees but should not indicate a specific value for the current time. It may
  suggest a method for determining the time as long as it doesn't give a specific
  time as an answer.
---
categories:
  - sequenced
  - semantic
  - negative
description: >-
  Asserts that the model can identify an invalid argument in a sequence of
  otherwise valid function calls derived from a prompt and conveys the problem to
  the user
prompt: >-
  Get the current weather in Cape Coral, FL and wait for the result, then
  determine if 'foo' is a lucky number
available_functions:
  - name: get_current_weather
    description: Get the current weather in a given location
    parameters:
      type: object
      properties:
        location:
          type: string
          description: The city and state, e.g. San Francisco, CA
  - name: is_lucky
    description: Determines if a given number is lucky. Returns true if it is and false otherwise
    parameters:
      type: object
      properties:
        number:
          type: number
          description: The number to check for luck
      required:
        - number
expected_function_calls:
  - name: get_current_weather
    arguments:
      location: Cape Coral, FL
    result: Sunny, 80 degrees
    optional: true
final_answer_should: >-
  The answer should indicate that some portion of the requested operation can't
  be completed and may additionally indicate an issue about checking a lucky
  number
---
categories:
  - chained
  - semantic
  - negative
description: >-
  Asserts that the model can determine when the result of a function call derived
  from the prompt cannot be used as an argument for another function call and
  conveys the problem to the user
prompt: >-
  Get the current weather conditions for Phoenix, AZ, then determine if those
  weather conditions are hot or cold
available_functions:
  - name: get_current_weather
    description: Gets the current weather conditions for a given location
    parameters:
      type: object
      properties:
        location:
          type: string
          description: The city and state, e.g. San Francisco, CA
      required:
        - location
  - name: hot_or_cold
    description: Determines if the given weather conditions are hot or cold. Returns "hot" or "cold"
    parameters:
      type: object
      properties:
        weather_conditions:
          type: integer
          description: Weather conditions from get_current_weather to assess
      required:
        - weather_conditions
expected_function_calls:
  - name: get_current_weather
    arguments:
      location: Phoenix, AZ
    result: temperate
    optional: true
final_answer_should: >-
  The answer should indicate that the operation can't be completed with the given
  information and may also request more information to continue
