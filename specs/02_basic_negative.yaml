---
description: Asserts that the model can determine when an argument specified by the prompt is invalid and conveys the problem to the user
categories:
  - basic
  - negative
prompt: Call funcA with 'foo'
available_functions:
  - name: funcA
    description: Performs funcA
    parameters:
      type: object
      properties:
        param1:
          type: integer
          description: Param 1
      required:
        - param1
expected_function_calls: []
final_answer_should: The answer should indicate that something went wrong or that it cannot complete the requested operation as specified
---
description: Asserts that the model can determine when a function specified by the prompt is unavailable and conveys the problem to the user
categories:
  - basic
  - negative
prompt: Call funcB with 1
available_functions:
  - name: funcA
    description: Performs funcA
    parameters:
      type: object
      properties:
        param1:
          type: integer
          description: Param 1
expected_function_calls: []
final_answer_should: The answer should indicate that something went wrong or that it cannot complete the requested operation because funcB is not available
---
description: Asserts that the model can distinguish between available and unavailable functions when both are specified by the prompt and conveys the problem to the user
categories:
  - basic
  - negative
prompt: Call funcA with 1 and funcB with 2
available_functions:
  - name: funcA
    description: Performs funcA
    parameters:
      type: object
      properties:
        param1:
          type: integer
          description: Param 1
expected_function_calls:
  - name: funcA
    arguments:
      param1: 1
    result: This is the output of funcA(1)
    optional: true
final_answer_should: The answer should indicate that something went wrong or that funcB is not available. The answer should not provide a result for funcB.
