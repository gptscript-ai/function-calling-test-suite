test_id,categories,description,prompt,gpt-4-turbo-2024-04-09,gpt-4o-2024-05-13,mistral-large-2402,gemini-1.5-pro-preview-0409,claude-3-opus-20240229,gpt-3.5-turbo-0125
01_basic.json-0,basic,Asserts that the model can make a function call with a given argument and conveys the result to the user,Call funcA with 1 and respond with the result of the call,10/10,10/10,10/10,10/10,0/10,10/10
01_basic.json-1,basic,Asserts that the model can make a function call with an ordered set of arguments and conveys the result to the user,"Call funcA with 1, 2, 3, 4, 5 and respond with the result of the call",10/10,10/10,10/10,10/10,10/10,10/10
02_basic_negative.json-0,"basic, negative",Asserts that the model can determine when an argument specified by the prompt is invalid and conveys the problem to the user,Call funcA with 'foo',10/10,8/10,10/10,0/10,10/10,0/10
02_basic_negative.json-1,"basic, negative",Asserts that the model can determine when a function specified by the prompt is unavailable and conveys the problem to the user,Call funcB with 1,10/10,10/10,10/10,0/10,10/10,0/10
02_basic_negative.json-2,"basic, negative",Asserts that the model can distinguish between available and unavailable functions when both are specified by the prompt and conveys the problem to the user,Call funcA with 1 and funcB with 2,10/10,0/10,10/10,9/10,10/10,0/10
03_sequenced.json-0,sequenced,Asserts that the model can make a sequence of function calls in the correct order and conveys the results to the user,"Call funcA with 1, then call funcB with 2, then respond with the results of both calls",10/10,10/10,10/10,0/10,3/10,10/10
03_sequenced.json-1,"unordered, sequenced",Asserts that the model can make a mix of ordered an unordered function calls and conveys the result to the user,"First funcA with 1 and wait for the result, then call funcB with 2, funcC with 3, and funcD with 4 in any order before finally calling funcE with 5, then respond with the result of each call",10/10,10/10,10/10,0/10,10/10,10/10
04_sequenced_negative.json-0,"negative, sequenced",Asserts that the model can determine when the result of a function call cannot be used as the argument for a specified function and conveys the problem to the user,"Call funcA with 1, then call funcB with 'foo'",10/10,0/10,10/10,0/10,10/10,0/10
05_chained.json-0,chained,Asserts that the model can use the result of a function call as the argument for a specified function and conveys the result to the user,"Call funcA with 1, then funcB with the result, then return the result of calling funcB",7/10,10/10,10/10,0/10,0/10,6/10
05_chained.json-1,"chained, grouped",Asserts that the model can use the results of a group of function calls as arguments for a single function call and conveys the result to the user,"Call funcA with 1 and funcB with 2, then return the result of calling funcC with results of the previous calls",10/10,10/10,0/10,0/10,0/10,10/10
05_chained.json-2,"chained, grouped",Asserts that the model can use the results of a group of function calls as arguments for successive groups of function calls and conveys the result to the user,"Call funcA with 1 and funcB with 2, then call funcC with their results. Next call funcD with 3 and funcE with 4, then call funcF with their result. Finally call funcG with the result of funcC and funcF",10/10,10/10,10/10,0/10,0/10,10/10
06_chained_negative.json-0,"chained, negative",Asserts that the model can determine when the result of a function cannot be used as the argument for a specified function and conveys the problem to the user,Call funcA with 1 and then call funcB with the result,0/10,0/10,0/10,10/10,6/10,0/10
07_semantic.json-0,"basic, semantic",Asserts that the model can derive and make a function call with one argument from a prompt and conveys the result to the user,"Get the current weather for Cupertino, CA",10/10,10/10,10/10,10/10,10/10,10/10
07_semantic.json-1,"basic, semantic",Asserts that the model can derive and make a function call with two arguments from a prompt and conveys the result to the user,"Get the current weather in celsius for Charleston, SC",10/10,10/10,10/10,10/10,10/10,10/10
07_semantic.json-2,"semantic, sequenced",Asserts that the model can derive and make an ordered sequence of function calls from a prompt and conveys the results to the user,"Get the current weather for Fort Myers, FL, then get the current time at Phoenix, AZ",10/10,10/10,0/10,0/10,10/10,10/10
07_semantic.json-3,"chained, semantic","Asserts that the model can derive and make two function calls from the prompt, using the result of the first call as the argument for the second, and convey the result to the user","Get the current weather for Austin, TX and then tell me if that weather is hot",10/10,3/10,10/10,7/10,10/10,0/10
07_semantic.json-4,"chained, semantic","Asserts that the model can derive and make a series of functions calls from a prompt, where the results of an initial group of calls are used as arguments for a final function call, and conveys the result to the user","Get the current date at Atlantic City, NJ, then get the weather conditions there on the current date, then determine if those weather conditions are hot",10/10,7/10,10/10,0/10,10/10,10/10
07_semantic.json-5,"chained, semantic",Asserts that the model can interpret and execute a complex series of chained steps related to creating a database and creating entries in it.,"Perform the following actions in order. Do not move on to the next step until you've completed the previous.

1. Start the database.
2. Create a collection called `headlines` in the database.
3. Read the file headlines.md
4. Write each headline into the database collection that you created earlier called `headlines`. Write each one using a separate call to the  database_create_entry tool. Let me know when you've finished and if you were successful.",10/10,10/10,0/10,10/10,10/10,10/10
07_semantic.json-6,"chained, semantic, grouped","Asserts that the model can parse a comma delimited list from one function, pass each entry to a second function, and send the gathered results of those calls to a third function.","Find all *.go files and count the lines of code in each file, add the result and print it",7/10,10/10,0/10,0/10,0/10,8/10
07_semantic.json-7,"chained, semantic",Asserts that the model can parse a large csv style response and make a series of chained calls for each row in the csv,"Retrieve the list of potential sales leads and for each add them to our system. Then, send an initial contact email to each lead. Finally, assign a sales rep to each lead.",10/10,10/10,0/10,0/10,10/10,10/10
08_semantic_negative.json-0,"basic, negative, semantic",Asserts that the model can determine when the capabilities of the available functions are not sufficient to answer a prompt and conveys the problem to the user,Get the current time at Tokyo,9/10,4/10,10/10,10/10,10/10,0/10
08_semantic_negative.json-1,"basic, negative, semantic",Asserts that the model can determine when a prompt provides an invalid argument for a function and conveys the problem to the user,Determine if 'foo' is a lucky number,10/10,4/10,10/10,0/10,10/10,0/10
08_semantic_negative.json-2,"basic, negative, semantic",Asserts that the model can determine when the available functions are insufficient to answer a prompt and conveys the problem to the user,"Get the current weather for Buford, GA then get the current time there.",0/10,0/10,10/10,10/10,10/10,0/10
08_semantic_negative.json-3,"semantic, negative, sequenced",Asserts that the model can identify an invalid argument in a sequence of otherwise valid function calls derived from a prompt and conveys the problem to the user,"Get the current weather in Cape Coral, FL and wait for the result, then determine if 'foo' is a lucky number",10/10,0/10,10/10,0/10,10/10,0/10
08_semantic_negative.json-4,"chained, semantic, negative",Asserts that the model can determine when the result of a function call derived from the prompt cannot be used as an argument for another function call and conveys the problem to the user,"Get the current weather conditions for Phoenix, AZ, then determine if those weather conditions are hot or cold",0/10,0/10,10/10,0/10,0/10,0/10
